"use strict";(self.webpackChunkmonk_website=self.webpackChunkmonk_website||[]).push([[588],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=c(t),d=o,k=m["".concat(p,".").concat(d)]||m[d]||u[d]||a;return t?r.createElement(k,s(s({ref:n},l),{},{components:t})):r.createElement(k,s({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},64282:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>i,contentTitle:()=>p,metadata:()=>c,toc:()=>l,default:()=>m});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),s=["components"],i={id:"corejs",title:"\ud83e\uddff corejs",slug:"/js/api/corejs"},p=void 0,c={unversionedId:"js/api/corejs",id:"js/api/corejs",isDocsHomePage:!1,title:"\ud83e\uddff corejs",description:"npm latest package",source:"@site/docs/js/api/corejs.md",sourceDirName:"js/api",slug:"/js/api/corejs",permalink:"/monkjs/docs/js/api/corejs",tags:[],version:"current",frontMatter:{id:"corejs",title:"\ud83e\uddff corejs",slug:"/js/api/corejs"},sidebar:"docsSidebar",previous:{title:"\ud83d\udd13 Authenticate",permalink:"/monkjs/docs/js/guides/authenticating"},next:{title:"\ud83e\uddf1 react-native",permalink:"/monkjs/docs/js/api/react-native"}},l=[{value:"MonkCore",id:"monkcore",children:[{value:"APIs",id:"apis",children:[]}]},{value:"Inspection API",id:"inspection-api",children:[{value:"useGetInspectionByIdQuery",id:"usegetinspectionbyidquery",children:[]},{value:"useGetInspectionsQuery",id:"usegetinspectionsquery",children:[]},{value:"useGetAllInspectionsQuery",id:"usegetallinspectionsquery",children:[]},{value:"usePostOneInspectionQuery",id:"usepostoneinspectionquery",children:[]}]},{value:"Damage API",id:"damage-api",children:[]},{value:"Sights",id:"sights",children:[]}],u={toc:l};function m(e){var n=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/@monkvision/corejs/latest.svg",alt:"npm latest package"})),(0,a.kt)("p",null,"Install with ",(0,a.kt)("inlineCode",{parentName:"p"},"npm")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-npm"},"npm install @monkvision/corejs @reduxjs/toolkit react-redux --save\n")),(0,a.kt)("p",null,"Install from ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/corejs @reduxjs/toolkit react-redux\n")),(0,a.kt)("p",null,"\u26d3\ufe0f Peer dependencies in ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/monkvision/monkjs/tree/main/packages/corejs/package.json"},(0,a.kt)("inlineCode",{parentName:"a"},"package.json")),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'"@reduxjs/toolkit": "*"\n"react": "^16.14.0 || ^17.0.0",\n"react-redux": "^7.2.1"\n')),(0,a.kt)("h2",{id:"monkcore"},"MonkCore"),(0,a.kt)("p",null,"Based on Redux, the core instance provides a set of tools to request manipulation of Monk data."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import MonkCore, { getBaseQuery } from '@monkvision/corejs';\nimport dotenv from 'dotenv'\n\n// Use the env config tool that fit your own project\n// For example:\n// import Constants from 'expo-constants';\n// const config = Constants.manifest.extra;\n\nconst config = dotenv.config()\n\nif (config.error) {\n  throw config.error\n}\n\nconst monkCore = new MonkCore(getBaseQuery({\n  baseUrl: `https://${config.MONK_DOMAIN}/`,\n}));\n\nexport default monkCore;\n")),(0,a.kt)("h3",{id:"apis"},"APIs"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#inspection-api"},"inspection")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#damage-api"},"damage"))),(0,a.kt)("h2",{id:"inspection-api"},"Inspection API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import monkCore from 'config/monkCore';\n\n// Your own components...\nimport Loading from 'components/Loading';\nimport Empty from 'components/Empty';\nimport Inspection from 'components/Inspection';\n\nconst { useGetInspectionsQuery } = monkCore.inspection;\n\nfunction App() {\n  const { data, isLoading } = useGetInspectionsQuery();\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  if (isEmpty(data)) {\n    return <Empty />;\n  }\n\n  return data.map((props) => <Inspection {...props) />;\n}\n")),(0,a.kt)("h3",{id:"usegetinspectionbyidquery"},"useGetInspectionByIdQuery"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { useGetInspectionsQuery } = monkCore.inspection;\nconst { data, isLoading } = useGetInspectionsQuery(id);\n")),(0,a.kt)("h3",{id:"usegetinspectionsquery"},"useGetInspectionsQuery"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { useGetInspectionsQuery } = monkCore.inspection;\nconst { data, isLoading } = useGetInspectionsQuery({ limit: 20 });\n")),(0,a.kt)("h3",{id:"usegetallinspectionsquery"},"useGetAllInspectionsQuery"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { useGetAllInspectionsQuery } = monkCore.inspection;\n")),(0,a.kt)("h3",{id:"usepostoneinspectionquery"},"usePostOneInspectionQuery"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { usePostOneInspectionQuery } = monkCore.inspection;\n")),(0,a.kt)("h2",{id:"damage-api"},"Damage API"),(0,a.kt)("h2",{id:"sights"},"Sights"))}m.isMDXComponent=!0}}]);