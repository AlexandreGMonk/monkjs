"use strict";(self.webpackChunkmonk_website=self.webpackChunkmonk_website||[]).push([[732],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(g,o(o({ref:t},p),{},{components:n})):r.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},92351:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>l,metadata:()=>c,toc:()=>p,default:()=>m});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],s={id:"picturing",title:"\ud83d\udcf7 Taking pictures",slug:"/js/guides/picturing"},l=void 0,c={unversionedId:"js/guides/picturing",id:"js/guides/picturing",isDocsHomePage:!1,title:"\ud83d\udcf7 Taking pictures",description:"The Camera view takes on a more complete state with Sights.",source:"@site/docs/js/guides/picturing.md",sourceDirName:"js/guides",slug:"/js/guides/picturing",permalink:"/monkjs/docs/js/guides/picturing",tags:[],version:"current",frontMatter:{id:"picturing",title:"\ud83d\udcf7 Taking pictures",slug:"/js/guides/picturing"},sidebar:"docsSidebar",previous:{title:"\ud83d\udce6 Installation",permalink:"/monkjs/docs/installation"},next:{title:"\ud83d\udd13 Authenticate",permalink:"/monkjs/docs/js/guides/authenticating"}},p=[{value:"First steps",id:"first-steps",children:[]},{value:"Sights",id:"sights",children:[{value:"Outputs",id:"outputs",children:[]}]},{value:"Rendering",id:"rendering",children:[]},{value:"What&#39;s next?",id:"whats-next",children:[]}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The Camera view takes on a more complete state with ",(0,i.kt)("strong",{parentName:"p"},"Sights"),".\nWe recommend using this ",(0,i.kt)("inlineCode",{parentName:"p"},"<CameraView />")," to take pictures of your vehicles."),(0,i.kt)("h2",{id:"first-steps"},"First steps"),(0,i.kt)("p",null,"Install from ",(0,i.kt)("inlineCode",{parentName:"p"},"npm")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-npm"},"npm install @monkvision/react-native-views @monkvision/corejs @monkvision/react-native react-native-paper --save\n")),(0,i.kt)("p",null,"Install from ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/react-native-views @monkvision/corejs @monkvision/react-native react-native-paper\n")),(0,i.kt)("h2",{id:"sights"},"Sights"),(0,i.kt)("p",null,"A capture scheme is a list of sights ",(0,i.kt)("inlineCode",{parentName:"p"},"[Sight]")," with a unique string ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," and ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Cylindrical_coordinate_system"},"cylindrical coordinates")," ",(0,i.kt)("inlineCode",{parentName:"p"},"(\u03c1\u03c6z)"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"If our AI can work without this metadata, it analyzes much more easily with it. The Camera view then embeds a list of default sights that you can customize in the near future.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"const sight = new Sight('abstractFront', [null, 0, null], 'Front');")),(0,i.kt)("p",null,"This scheme will enable a wheel indicator displaying the angle we need to take the picture.\nPlus an overlay is completing the view helping to take position before taking the picture."),(0,i.kt)("h3",{id:"outputs"},"Outputs"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'/* picture */\n\n{\n  "abstractFront":{\n    "sight":Sight,\n    "source":{\n      "uri":"data:image/png;base64",\n      "base64":"data:image/png;base64",\n      "width":640,\n      "height":480,\n      "exif":{\n        "aspectRatio":1.33,\n        "deviceId":"3e472a",\n        "frameRate":30.000030517578125,\n        "groupId":"cf50a2",\n        "height":480,\n        "resizeMode":"none",\n        "width":640\n      }\n    }\n  }\n}\n')),(0,i.kt)("h2",{id:"rendering"},"Rendering"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"/* MyCameraView.jsx */\n\nimport React, { useCallback } from 'react';\nimport { CameraView } from '@monkvision/react-native-views';\n\nexport default function MyCameraView() {\n\n  const handleCloseCamera = useCallback((pictures) => {\n    console.log(pictures); // [[Sight, CameraPicture], ...]\n  }, []);\n\n  const handleTakePicture = useCallback((picture) => {\n    console.log(picture); // [Sight, CameraPicture]\n  }, []);\n\n  return (\n    <CameraView\n      onCloseCamera={handleCloseCamera}\n      onTakePicture={handleTakePicture}\n      analyzeAfterCapture\n    />\n  );\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"See the ",(0,i.kt)("a",{parentName:"strong",href:"https://monkvision.github.io/monkjs/docs/js/api/react-native-views#cameraview"},"CameraView API")," to more details.")),(0,i.kt)("h2",{id:"whats-next"},"What's next?"),(0,i.kt)("p",null,"You surely want to analyze and manipulate photos via Monk's predictions,\nbut first we will see how to authenticate before executing a request to our API."))}m.isMDXComponent=!0}}]);