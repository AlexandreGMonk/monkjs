"use strict";(self.webpackChunkmonk_website=self.webpackChunkmonk_website||[]).push([[269],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>u});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(t),u=i,h=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return t?a.createElement(h,r(r({ref:n},c),{},{components:t})):a.createElement(h,r({ref:n},c))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=d;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,r[1]=p;for(var s=2;s<o;s++)r[s]=t[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8422:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>p,contentTitle:()=>l,metadata:()=>s,toc:()=>c,default:()=>d});var a=t(7462),i=t(3366),o=(t(7294),t(3905)),r=["components"],p={id:"damage-annotation",title:"DamageAnnotation",slug:"/js/api/components/damage-annotation"},l=void 0,s={unversionedId:"js/api/components/damage-annotation",id:"js/api/components/damage-annotation",title:"DamageAnnotation",description:"DamageAnnotation allows the user to highlight a damage manually with an ellipse. Then he can manipulate this ellipse",source:"@site/docs/js/api/components/DamageAnnotation.md",sourceDirName:"js/api/components",slug:"/js/api/components/damage-annotation",permalink:"/monkjs/docs/js/api/components/damage-annotation",tags:[],version:"current",frontMatter:{id:"damage-annotation",title:"DamageAnnotation",slug:"/js/api/components/damage-annotation"},sidebar:"docsSidebar",previous:{title:"DamageHighlight",permalink:"/monkjs/docs/js/api/components/damage-highlight"},next:{title:"\ud83e\uddef Troubleshooting",permalink:"/monkjs/docs/troubleshooting"}},c=[{value:"clip",id:"clip",children:[],level:2},{value:"image",id:"image",children:[],level:2},{value:"options",id:"options",children:[{value:"backgroundOpacity",id:"backgroundopacity",children:[],level:3},{value:"ellipse.stroke",id:"ellipsestroke",children:[],level:3},{value:"ellipse.anchor.{ x | y | o }",id:"ellipseanchor-x--y--o-",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],level:2},{value:"renderOptions",id:"renderoptions",children:[{value:"width",id:"width",children:[],level:3},{value:"height",id:"height",children:[],level:3},{value:"rx",id:"rx",children:[],level:3},{value:"ry",id:"ry",children:[],level:3}],level:2}],m={toc:c};function d(e){var n=e.components,t=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"DamageAnnotation")," allows the user to highlight a damage manually with an ellipse. Then he can manipulate this ellipse\nby moving and resizing it to match a damage.\n",(0,o.kt)("a",{parentName:"p",href:"https://snack.expo.dev/@alexandre-em-monk/damageannotation-component"},"Try it with Expo Snack.")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/@monkvision/react-native/latest.svg",alt:"npm latest package"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/visualization\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { DamageAnnotation } from '@monkvision/visualization';\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'// Usage example\nconst image = {\n  id: "uuid", // image\'s uuid\n  width: 0, // original size of the image\n  height: 0,\n  source: {\n    uri: "https://my_image_path.monk.ai"\n  },\n};\n\nconst renderOptions = { width: 400, height: 220, rx: 100, ry: 100 };\n\n<DamageAnnotation\n  image={image}\n  renderOptions={renderOptions}\n  clip={false}\n/>;\n')),(0,o.kt)("p",null,"The property ",(0,o.kt)("inlineCode",{parentName:"p"},"image")," comes from the result of an inspection, which is formatted with the\nhooks ",(0,o.kt)("a",{parentName:"p",href:"/docs/js/api/components/damage-highlight#usepolygons"},(0,o.kt)("inlineCode",{parentName:"a"},"usePolygon")),"."),(0,o.kt)("h1",{id:"props"},"Props"),(0,o.kt)("h2",{id:"clip"},"clip"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropsType.bool")),(0,o.kt)("p",null,"Set the clip path property to show separate the polygons of the picture."),(0,o.kt)("h2",{id:"image"},"image"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'PropTypes.shape({\n  height: PropTypes.number,\n  id: PropTypes.string, // image\'s uuid\n  source: PropTypes.shape({\n    uri: PropTypes.string, // "https://my_image_path.monk.ai"\n  }),\n  width: PropTypes.number, // original size of the image\n})\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const image = { id: 'uuid', width: 0, height: 0, source: {\n  uri: 'https://my_image_path.monk.ai'\n}};\n\n<DamageAnnotation image={image}/>\n")),(0,o.kt)("h2",{id:"options"},"options"),(0,o.kt)("h3",{id:"backgroundopacity"},"backgroundOpacity"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropsType.number")),(0,o.kt)("p",null,"Set the background image opacity (works only if clip is ",(0,o.kt)("inlineCode",{parentName:"p"},"true"),")"),(0,o.kt)("h3",{id:"ellipsestroke"},"ellipse.stroke"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropTypes.shape({ color: PropTypes.string, strokeWidth: PropTypes.number })")),(0,o.kt)("p",null,"Set the style of the ellipse by defining the stroke's color and width"),(0,o.kt)("h3",{id:"ellipseanchor-x--y--o-"},"ellipse.anchor.{ x | y | o }"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropsTypes.shape({ color: PropsTypes.string, radius: PropsTypes.number })")),(0,o.kt)("p",null,"Set the color of the ellipse's anchor icon of the ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," axis or the origin ",(0,o.kt)("inlineCode",{parentName:"p"},"o"),"'s color and size"),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const options = {\n  backgroundOpacity: 0.33,\n  ellipse: {\n    stroke: {\n      color: 'yellow',\n      strokeWidth: 2.5,\n    },\n    anchor: {\n      x: {\n        color: 'mediumseagreen',\n        radius: 15,\n      },\n      y: {\n        color: 'red',\n        radius: 15,\n      },\n      o: {\n        color: 'orange',\n        radius: 15,\n      },\n    },\n  },\n};\n\n<DamageAnnotation options={options} clip />\n")),(0,o.kt)("h2",{id:"renderoptions"},"renderOptions"),(0,o.kt)("h3",{id:"width"},"width"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropsTypes.number")),(0,o.kt)("p",null,"Set the width of the rendered component"),(0,o.kt)("h3",{id:"height"},"height"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropsTypes.number")),(0,o.kt)("p",null,"Set the height of the rendered component"),(0,o.kt)("h3",{id:"rx"},"rx"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropsTypes.number")),(0,o.kt)("p",null,"Set the ellipse's radius on the ",(0,o.kt)("inlineCode",{parentName:"p"},"x")," axis"),(0,o.kt)("h3",{id:"ry"},"ry"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"PropsTypes.number")),(0,o.kt)("p",null,"Set the ellipse's radius on the ",(0,o.kt)("inlineCode",{parentName:"p"},"y")," axis"))}d.isMDXComponent=!0}}]);