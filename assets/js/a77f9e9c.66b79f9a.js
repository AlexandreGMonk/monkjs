"use strict";(self.webpackChunkmonk_website=self.webpackChunkmonk_website||[]).push([[298],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>u});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),s=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=s(e.components);return a.createElement(l.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,g=p(e,["components","mdxType","originalType","parentName"]),c=s(t),u=o,h=c["".concat(l,".").concat(u)]||c[u]||m[u]||r;return t?a.createElement(h,i(i({ref:n},g),{},{components:t})):a.createElement(h,i({ref:n},g))}));function u(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=c;var p={};for(var l in n)hasOwnProperty.call(n,l)&&(p[l]=n[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,i[1]=p;for(var s=2;s<r;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3847:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>p,contentTitle:()=>l,metadata:()=>s,toc:()=>g,default:()=>c});var a=t(7462),o=t(3366),r=(t(7294),t(3905)),i=["components"],p={id:"damage-highlight",title:"DamageHighlight",slug:"/js/api/components/damage-highlight"},l=void 0,s={unversionedId:"js/api/components/damage-highlight",id:"js/api/components/damage-highlight",title:"DamageHighlight",description:"Polygons on a vehicle picture.",source:"@site/docs/js/api/components/DamageHighlight.md",sourceDirName:"js/api/components",slug:"/js/api/components/damage-highlight",permalink:"/monkjs/docs/js/api/components/damage-highlight",tags:[],version:"current",frontMatter:{id:"damage-highlight",title:"DamageHighlight",slug:"/js/api/components/damage-highlight"},sidebar:"docsSidebar",previous:{title:"Capture",permalink:"/monkjs/docs/js/api/components/capture"},next:{title:"\ud83e\uddef Troubleshooting",permalink:"/monkjs/docs/troubleshooting"}},g=[{value:"image",id:"image",children:[],level:2},{value:"polygons",id:"polygons",children:[],level:2},{value:"usePolygons",id:"usepolygons",children:[],level:2}],m={toc:g};function c(e){var n=e.components,t=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Polygons on a vehicle picture."),"\nDamages are highlighted by the property ",(0,r.kt)("inlineCode",{parentName:"p"},"clipPath")," while the opacity of the rest of the image is reduced to localized\nthe damage on the car.\n",(0,r.kt)("a",{parentName:"p",href:"https://snack.expo.dev/@alexandre-em-monk/damagehighlight-component"},"Try it with Expo Snack.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://img.shields.io/npm/v/@monkvision/react-native/latest.svg",alt:"npm latest package"})),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yarn"},"yarn add @monkvision/react-native\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { DamageHighlight } from '@monkvision/react-native';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'const image = {\n  id: "uuid", // image\'s uuid\n  width: 0, // original size of the image\n  height: 0,\n  source: {\n    uri: "https://my_image_path.monk.ai"\n  },\n};\n\nconst polygons = [[[0, 0], [1, 0], [0, 1]], [[2, 0], [1, 1], [0, 2]]];\n\n<DamageHighlight image={image} polygons={polygons} />;\n')),(0,r.kt)("p",null,"The component's properties are from the result of an inspection. Both of them are a part of ",(0,r.kt)("inlineCode",{parentName:"p"},"inspection.images"),"."),(0,r.kt)("h2",{id:"image"},"image"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'PropTypes.shape({\n  height: PropTypes.number,\n  id: PropTypes.string, // image\'s uuid\n  source: PropTypes.shape({\n    uri: PropTypes.string, // "https://my_image_path.monk.ai"\n  }),\n  width: PropTypes.number, // original size of the image\n})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const image = { id: 'uuid', width: 0, height: 0, source: {\n  uri: 'https://my_image_path.monk.ai'\n}};\n\n<DamageHighlight image={image}/>\n")),(0,r.kt)("h2",{id:"polygons"},"polygons"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.arrayO(PropTypes.number)))")),(0,r.kt)("p",null,"Polygons are 3 levels depth matrix and come from ",(0,r.kt)("inlineCode",{parentName:"p"},"inspection.images[i].views.image_region.polygons"),"."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"list all polygons of a ",(0,r.kt)("inlineCode",{parentName:"li"},"damage")," on the current ",(0,r.kt)("inlineCode",{parentName:"li"},"image")),(0,r.kt)("li",{parentName:"ol"},"list all ",(0,r.kt)("inlineCode",{parentName:"li"},"points")," of a single ",(0,r.kt)("inlineCode",{parentName:"li"},"polygon")),(0,r.kt)("li",{parentName:"ol"},"is the ",(0,r.kt)("inlineCode",{parentName:"li"},"position")," of a ",(0,r.kt)("inlineCode",{parentName:"li"},"point")," in the plane (basically ",(0,r.kt)("inlineCode",{parentName:"li"},"x")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"y"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const polygons = [[[0, 0], [1, 0], [0, 1]], [[2, 0], [1, 1], [0, 2]]];\n\n<DamageHighlight polygons={polygons}/>\n")),(0,r.kt)("p",null,"It is also possible to manipulate the polygons properties like its opacity, the stroke color and width\nbut also the background image opacity."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"  backgroundOpacity: PropTypes.number,\n  polygonsProps: PropTypes.shape({\n    opacity: PropTypes.number,\n    stroke: PropTypes.shape({\n      color: PropTypes.string,\n      strokeWidth: PropTypes.number,\n    }),\n  }),\n")),(0,r.kt)("h2",{id:"usepolygons"},"usePolygons"),(0,r.kt)("p",null,"Extract properties from an API server response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { usePolygons } from '@monkvision/react-native';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"const oneImage = inspection.images[0]; // result from API\n\nconst [getImage, getPolygons] = usePolygons();\n\n<DamageHighlight\n  image={getImage(oneImage)}\n  polygons={getPolygons(oneImage.id, damage.views)[0]}\n  polygonsProps={{\n    opacity: 0.75,\n    polygonsProps={{\n      opacity: 0.5,\n      stroke: {\n        color: 'green',\n        strokeWidth: 50,\n      }\n    }}\n  }}\n/>\n")))}c.isMDXComponent=!0}}]);